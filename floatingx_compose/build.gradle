plugins {
    alias(libs.plugins.android.lirary)
    alias(libs.plugins.jetbrains.kotlin.android)
    alias(libs.plugins.vanniketch.maven.publish)
}

mavenPublishing {
    def versionName = project.hasProperty("versionName") ? project.getProperty("versionName") : null
    def isPublish = project.hasProperty("isPublish") ? project.getProperty("isPublish").toBoolean() : false
    if (isPublish) signAllPublications()
    coordinates("io.github.petterpx", "floatingx-compose", versionName)
}

android {
    namespace 'com.petterp.floatingx.compose'

    compileSdk libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        minSdk libs.versions.minSdk.get().toInteger()
        targetSdk libs.versions.targetSdk.get().toInteger()
        consumerProguardFiles "proguard-floatingx-compose.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-floatingx-compose.pro'
        }
    }
    compileOptions {
        def javeVersion = JavaVersion.toVersion(libs.versions.jvmTarget.get())
        sourceCompatibility javeVersion
        targetCompatibility javeVersion
    }
    kotlinOptions {
        jvmTarget = libs.versions.jvmTarget.get()
    }
    buildFeatures {
        buildConfig = false
    }
}

dependencies {
    implementation project(':floatingx')
    implementation libs.appcompat
    implementation libs.kotlin.stdlib
}