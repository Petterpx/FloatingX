plugins {
    alias(libs.plugins.compose.compiler)
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
}


android {

    compileSdk libs.versions.simpleComposeSdk.get().toInteger()

    defaultConfig {
        applicationId "com.petterp.floatingx.app"
        minSdk libs.versions.simpleMinSdk.get().toInteger()
        targetSdk libs.versions.simpleComposeSdk.get().toInteger()
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-floatingx.pro'
        }
    }
    compileOptions {
        def javeVersion = JavaVersion.toVersion(libs.versions.jvmTarget.get())
        sourceCompatibility = javeVersion
        targetCompatibility = javeVersion
    }
    kotlinOptions {
        jvmTarget = libs.versions.jvmTarget.get()
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    buildFeatures {
        compose true
        buildConfig = true
    }
    namespace 'com.petterp.floatingx.app'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation platform(libs.compose.bom)
    implementation(libs.compose.ui)
    implementation(libs.compose.material3)
    debugImplementation(libs.compose.ui.tooling)

    implementation libs.appcompat
    implementation libs.material
    implementation libs.constraintlayout
    debugImplementation libs.leakcanary.android
    debugImplementation libs.codelocator.core
//    debugImplementation libs.leakcanary.object1.watcher.android.startup

    implementation isDev ? project(path: ':floatingx_compose') : "io.github.petterpx:floatingx-compose:$version_name"
    implementation isDev ? project(path: ':floatingx') : "io.github.petterpx:floatingx:$version_name"
}